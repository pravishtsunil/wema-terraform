name: "Terraform Workflow"
on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: read
  actions: read

jobs:
  Plan_Dev:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2

      - name: Terraform Init
        working-directory: Terraform
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=dev/terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"
      
      - name: Terraform Plan
        working-directory: Terraform
        run: terraform plan -var-file="dev.tfvars"

  Plan_Uat:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2

      - name: Terraform Init
        working-directory: Terraform
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=uat/terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"
      
      - name: Terraform Plan
        working-directory: Terraform
        run: terraform plan -var-file="uat.tfvars"

  Plan_Prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2

      - name: Terraform Init
        working-directory: Terraform
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=prod/terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"
      
      - name: Terraform Plan
        working-directory: Terraform
        run: terraform plan -var-file="prod.tfvars"

  Deploy_Dev:
    needs: Plan_Dev
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2

      - name: Terraform Init
        working-directory: Terraform
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=dev/terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"
      
      - name: Terraform Apply
        working-directory: Terraform
        run: terraform apply -auto-approve -var-file="dev.tfvars"

  Deploy_Uat:
    needs: Plan_Uat
    runs-on: ubuntu-latest
    environment: uat
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2

      - name: Terraform Init
        working-directory: Terraform
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=uat/terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"
      
      - name: Terraform Apply
        working-directory: Terraform
        run: terraform apply -auto-approve -var-file="uat.tfvars"

  Deploy_Prod:
    needs: Plan_Prod
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2.0.2

      - name: Terraform Init
        working-directory: Terraform
        run: terraform init -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" -backend-config="key=prod/terraform.tfstate" -backend-config="region=${{ secrets.AWS_REGION }}"
      
      - name: Terraform Apply
        working-directory: Terraform
        run: terraform apply -auto-approve -var-file="prod.tfvars"